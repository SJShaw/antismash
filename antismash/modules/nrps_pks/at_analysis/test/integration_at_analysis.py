# License: GNU Affero General Public License v3 or later
# A copy of GNU AGPL v3 should have been included in this software package in LICENSE.txt.

# for test files, silence irrelevant and noisy pylint warnings
# pylint: disable=no-self-use,protected-access,missing-docstring

import unittest

from antismash.modules.nrps_pks.at_analysis.at_analysis import run_at_domain_analysis

class TestKRAnalysis(unittest.TestCase):
    query_data = {'SCO0126_AT1': 'LFPGQGSQYVGMGAELAMLAPTAQAVWDRLGSIRFDGRPLHRAVFPPPAFTEEERAARAALLNATEWAQPALAVHALALLAVVRELGLRPDCVAGHSFGELVALHCAGALDAESLVGLARRRGELMREAAATPGAMLAVAADRVRVAEVLAGGGFEDIWPANHNSPRQTVLSGSAAAVERARSAFSAAGIASRGLSASTAFHSPLVAPAVEPLAAHLRTVTFSEPRIEVYGNTDAAPYPSCPDAVRRRVAGHLASPVLFQDQIEAMYAAGVRTFVEVGAGATLTGLVGQILGGREH',
      'SCO0127_AT1': 'EVLGLRPDAAIGYSSGESTALVALGAWPDASGLYEATRESGLFTTELTGELRAVRRYWRQRGIGGDRWSSYLVAAPLEAVRAELAGERAVHLMAVNAPGVCVVGGESKACAAVVARLGVDRAIELDYDMAAHAPELAEVREVWREAHRRPTVEVPGVRFYSGATGRAYRPTTERAAEALTAQGLGTIDFAATIERAWADGVRVFVEHGPRKLCTGWIKRVLGDREF',
      'SCO6827_AT1': 'VFPGQGSQWPGMGRELLDSEPVFHQAMRDCDDAIRTENGWSVIELLRSADEERLKELDVIQPTLWAIEIALAQLWRSWGIEPDVVIGHSMGESAAAYIAGALSLSDAAAVICRRSRLAKRLSGRGTMAWVALPADEAAAALVGHEDTVAVAAINSPTSTLLSGDGEALDQVLAGLDARSVDNRRVNVDFASHCPQMDALQEDLLSELSHLTPRAGTIPLHSTLLNEVIDGSGMNAEYWVRNIRQPVDFVGAVKGQLDLGDTVFVEVSPHPLLVSGIRETSRMATSADTTAVGSLRRH',
      'SCO6275_AT3': 'LFTGQGSQRLGMGRELYESSPVFAKALDEVCSRFRAELARPVKDVLFAQEDSATAALIDQTAFTQAALFCVEVALYRLFEHHGFTPDYLLGHSIGEVTAAYLSGVLDLDDACCLVAERGRLMQAAREGGAMAALQASEEEVYASIAPYGDAVGIAGVNGPESLVISGDEDVVEEVTAAWRANGVRTKRLPVSHAFHSSHMDEVLDEFREVASGLSFRPPRIPVVSNVTGTLATDAQLTSPDYWATHIREAVRFLDGVRYLEAQGVTDFLELGPDAVLTALTRGSLEEEAGVLVAALRRD',
      'SCO6275_AT2': 'LFTGQGAQRAGMGRELYARHPVFAEALDAAFGALDAHLDLPLREVVFAAEGSREAALLDETTYTQPALFALEVALFRLLEHHGVTPGLLAGHSVGELSAAHAAGVLTLDDAAKLVAARGRLMQAARSGGAMIAVEAAEEEVLPYLEGRAAGLSVAAVNGPASVVISGDEEPALEVAELLRASGRRTKRLTVSHAFHSPHMDGVLDAFREVASTVAFSAPTVPIVSTVTGRLATEAELTSPQYWANQIRAAVRFLDAARELAAQGATVFVEAGPDAVLTALTRAALEDTGATAVPLMR',
      'SCO6273_AT1': 'LFTGQGAQRTGMGMDLYRTFPAYAHAFDTITAQLDPHLDQPLHHTITTGHHLHHTGNTQPALFATEVALYRLLETWGITPDYLAGHSIGELTAAHISGILTLQDACTLVTARARLMQNLPTHGTMIALQATEQEILPHLTGHEHHLTIAAINSPTSLVISGNQTAAQHIATQLQAQGRKTKTLTVSHAFHSPHMDGMLHDFHHTATQLTYHEPTIPIVSTLTGNLATHNDLRTPTYWTDQLRNTVRYTQAIHTLHTAGVTTYTEIGPDATLTPLTQQTLDTTTAIPLLR',
      'SCO6274_AT1': 'LFTGQGAQRTGMGMDLYRTFPAYAHAFDTITAQLDPHLDQPLHHTITTGHHLHHTGNTQPALFATEVALYRLLETWGITPDYLAGHSIGELTAAHISGILTLQDACTLVTARARLMQNLPTHGTMIALQATEQEILPHLTGHEHHLTIAAINSPTSLVISGNQTAAQHIATQLQAQGRKTKTLTVSHAFHSPHMDGMLHDFHHTATQLTYHEPTIPIVSTLTGNLATHNDLRTPTYWTDQLRNTVRYTQAIHTLHTAGVTTYTEIGPDATLTPLTASTVEDSDGVAAIATLRA',
      'SCO6274_AT2': 'LFTGQGAQRTGMGMDLYRTFPAYAHAFDTITAQLDPHLDQPLHHTITTGHHLHHTGNTQPALFATEVALYRLLETWGITPDYLAGHSIGELTAAHISGILTLQDACTLVTARARLMQNLPTHGTMIALQATEQEILPHLTGHEHHLTIAAINSPTSLVISGNQTAAQHIATQLQAQGRKTKTLTVSHAFHSPHMDGMLHDFHHTATQLTYHEPTIPIVSTLTGNLATHNDLRTPTYWTDQLRNTVRYTQAIHTLHTAGVTTYTEIGPDATLTPLTQQTLDTTTAIPLLR',
      'SCO5892_AT1': 'LFGGQGTQYPGMGRDLYDAHPVLARTLRRADAVLRGLGEIPLLDLLFDPDRAEDLARTRYCQPALVALEVALADLWTSCGVRPAAVLGHSVGALAAACVAGVLSLEDALTLAVVRGRAMDEQPGEGAMIACVGDPETVREIAAGHDRVALAAVNAPRNLVFSGAADRIAALRGDLERKGVTVRPLAVSHAFHSPLMAGAAEPLLEAARAVEFQPPAIPWISDATGEPVTRVDAEYWVRHLLGTVRFADGFARLRAGNAEGGLGCDAFVEIGPHPTLLNLGRSAVADGPEPDGRRTLWLPSLRRG',
      'SCO6275_AT1': 'LFTGQGAQRPGMGQELYAAHPVFADAFDAVAERLDPMLKQPLWEVIASGEGLDETGRTQPALFAIEVALFRLLESWGVRPGFLAGHSIGELAAAHVAGVLSLDDAARLVAARARLMQALPAGGAMIAVEATEEEVLPHLEGLEARLSLAAVNGPASVVISGEADAAEDVAARLAEAGRRTKRLTVSHAFHSPLMDGMLKEFHKVAKELTYHAPRIPVVSTLTGALASGDDLRTPCYWTDQVRHAVRFADAVRTLGELGATVLLEVGPDAVLSSLADATPTL'
      }

    def test_full_run(self):
        results = run_at_domain_analysis(self.query_data)
        # check best hits only
        best = {key: (val[0].name, val[0].score) for key, val in results.items() if val}
        assert best == {'SCO0126_AT1': ('Q83Y48_AT1__mal', 79.16666666666667),
                        'SCO5892_AT1': ('D3Y1I5_AT1__mal', 95.83333333333333),
                        'SCO6273_AT1': ('Q9EWA1_AT4__mal', 91.66666666666667),
                        'SCO6274_AT1': ('Q9EWA1_AT4__mal', 91.66666666666667),
                        'SCO6274_AT2': ('Q9EWA1_AT4__mal', 91.66666666666667),
                        'SCO6275_AT1': ('Q93NX9_AT5__mal', 91.66666666666667),
                        'SCO6275_AT2': ('B5L6K9_AT4__mal', 95.83333333333333),
                        'SCO6275_AT3': ('Q53840_AT1__mal', 100.0),
                        'SCO6827_AT1': ('Q93TW8_AT1__mmal', 91.66666666666667)}
        # ensure that 127 made it in, but that it had no hits
        assert results['SCO0127_AT1'] == []
